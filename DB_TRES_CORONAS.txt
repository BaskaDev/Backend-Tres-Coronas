CREATE DATABASE tres_coronas_bar;

USE tres_coronas_bar;

CREATE TABLE bar (
    id_bar INT AUTO_INCREMENT PRIMARY KEY,
    name_bar VARCHAR(255) NOT NULL,
    address_bar VARCHAR(255) NOT NULL,
    locally_bar VARCHAR(255) NOT NULL
);


CREATE TABLE site (
    id_site INT AUTO_INCREMENT PRIMARY KEY,
    fk_id_bar INT,
    FOREIGN KEY (fk_id_bar) REFERENCES bar(id_bar) ON DELETE CASCADE
);


CREATE TABLE employee (
    id_employee INT AUTO_INCREMENT PRIMARY KEY,
    name_employee VARCHAR(20),
    position_employee VARCHAR(20),
    hiring_date_employee DATE NOT NULL,
    fk_id_site INT,
    FOREIGN KEY (fk_id_site) REFERENCES site(id_site)
);

CREATE TABLE audit (
    id_audit INT PRIMARY KEY NOT NULL,
    previous_state_audit VARCHAR(20),
    date_audit DATE NOT NULL,
    fk_id_employee INT,
    FOREIGN KEY (fk_id_employee) REFERENCES employee(id_employee)
);

CREATE TABLE gang (
    id_gang INT AUTO_INCREMENT PRIMARY KEY,
    name_gang VARCHAR(40) NOT NULL,
    number_members_gang INT,
    fk_id_site INT UNIQUE,
    FOREIGN KEY (fk_id_site) REFERENCES site(id_site)
);


CREATE TABLE status_client (
    id_status_client INT PRIMARY KEY NOT NULL,
    type_status_client VARCHAR(20) NOT NULL
);

CREATE TABLE cliente (
    id_client INT AUTO_INCREMENT PRIMARY KEY,
    name_client VARCHAR(20) NOT NULL,
	user_client VARCHAR(20) NOT NULL,
	pass_client VARCHAR(20) NOT NULL,
    fk_id_gang INT,
    fk_id_status INT,
    FOREIGN KEY (fk_id_gang) REFERENCES gang (id_gang),
    FOREIGN KEY (fk_id_status) REFERENCES status_client(id_status_client)
);

CREATE TABLE product (
    id_product INT AUTO_INCREMENT PRIMARY KEY,
    name_product VARCHAR(20)
);

CREATE TABLE inventory (
    id_inventory INT AUTO_INCREMENT PRIMARY KEY,
    date_inventory DATE NOT NULL,
    fk_id_product INT,
    amount_inventory INT NOT NULL,
    FOREIGN KEY (fk_id_product) REFERENCES product(id_product)
);

CREATE TABLE promotion (
    id_promotion INT PRIMARY KEY NOT NULL,
    start_date DATE NOT NULL,
    finish_date DATE NOT NULL,
    discount_promotion INT,
    fk_id_product INT,
    FOREIGN KEY (fk_id_product) REFERENCES product(id_product)
);

CREATE TABLE order_client (
    id_order_client INT PRIMARY KEY NOT NULL,
    amount_order_client DOUBLE,
    fk_id_client INT,
    fk_id_product INT,
    FOREIGN KEY (fk_id_client) REFERENCES cliente (id_client),
    FOREIGN KEY (fk_id_product) REFERENCES product (id_product)
);

INSERT INTO status_client(id_status_client, type_status_client) values(1,"Mata-Siete");
INSERT INTO status_client(id_status_client, type_status_client) values(2,"Fast-Pass");
INSERT INTO status_client(id_status_client, type_status_client) values(3,"Normal");